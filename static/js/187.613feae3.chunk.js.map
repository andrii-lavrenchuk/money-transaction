{"version":3,"file":"static/js/187.613feae3.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","components/Table/Table.js","components/views/UserTransactions/UserTransactions.js","redux/transactions/transactions-operations.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import { Table } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomTable = ({ transactions }) => {\r\n  return (\r\n    <Table striped bordered hover variant=\"info\">\r\n      <thead>\r\n        <tr>\r\n          <th>From</th>\r\n          <th>To</th>\r\n          <th>Amount</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {transactions.map((item, index) => (\r\n          <tr key={index}>\r\n            <td>{item.from}</td>\r\n            <td>{item.to}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.date}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nCustomTable.propTypes = {\r\n  transactions: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};\r\n\r\nexport default CustomTable;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { connect } from \"react-redux\";\r\n// components\r\nimport Loader from \"../../Loader\";\r\nimport CustomTable from \"../../Table\";\r\n\r\n// operations\r\nimport {\r\n  transactionsOperations,\r\n  transactionsActions,\r\n} from \"../../../redux/transactions\";\r\n\r\nconst UserTransactions = ({\r\n  amount,\r\n  getAllTransactions,\r\n  allTransactions,\r\n  currentUserId,\r\n  isLoading,\r\n  allProfiles,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getAllTransactions();\r\n  }, [getAllTransactions]);\r\n\r\n  useEffect(() => {\r\n    const countBalance = () => {\r\n      let amount = 0;\r\n\r\n      return (amount = allTransactions.reduce((total, item) => {\r\n        if (currentUserId === item.to) {\r\n          return total + item.amount;\r\n        }\r\n\r\n        if (currentUserId === item.from) {\r\n          return total - item.amount;\r\n        }\r\n\r\n        if (currentUserId === item.from && currentUserId === item.to) {\r\n          return total + item.amount;\r\n        }\r\n        amount = total;\r\n\r\n        return amount;\r\n      }, amount));\r\n    };\r\n\r\n    dispatch(transactionsActions.setAmountSuccess(countBalance()));\r\n  }, [allTransactions, currentUserId, dispatch]);\r\n\r\n  const allUserTransactions = allTransactions.filter(\r\n    (item) => item.from === currentUserId\r\n  );\r\n\r\n  const allTransactionsToUser = allTransactions.filter(\r\n    (item) => item.to === currentUserId\r\n  );\r\n\r\n  const transactionTo = allUserTransactions.map((item) => {\r\n    return {\r\n      to: item.to,\r\n      amount: item.amount,\r\n      date: item.created_at,\r\n    };\r\n  });\r\n\r\n  const transactionFrom = allTransactionsToUser.map((item) => {\r\n    return {\r\n      from: item.from,\r\n      amount: item.amount,\r\n      date: item.created_at,\r\n    };\r\n  });\r\n\r\n  const arrOfUserTransactions = [];\r\n  const arrOfToUserTransactions = [];\r\n\r\n  const makeTransactionsTo = (allTransactions, allProfiles) => {\r\n    for (let i = 0; i < allTransactions.length; i += 1) {\r\n      for (let j = 0; j < allProfiles.length; j += 1) {\r\n        if (allTransactions[i].to === currentUserId) {\r\n          continue;\r\n        }\r\n        if (allTransactions[i].to === allProfiles[j].user) {\r\n          const transaction = {\r\n            from: \"Me\",\r\n            to: `${allProfiles[j].firstName} ${allProfiles[j].lastName}`,\r\n            amount: allTransactions[i].amount,\r\n            date: allTransactions[i].date.slice(0, 10),\r\n          };\r\n\r\n          arrOfUserTransactions.push(transaction);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const makeTransactionsFrom = (allTransactions, allProfiles) => {\r\n    for (let i = 0; i < allTransactions.length; i += 1) {\r\n      for (let j = 0; j < allProfiles.length; j += 1) {\r\n        if (allTransactions[i].from === currentUserId) {\r\n          continue;\r\n        }\r\n        if (allTransactions[i].from === allProfiles[j].user) {\r\n          const transaction = {\r\n            to: \"Me\",\r\n            from: `${allProfiles[j].firstName} ${allProfiles[j].lastName}`,\r\n            amount: allTransactions[i].amount,\r\n            date: allTransactions[i].date.slice(0, 10),\r\n          };\r\n\r\n          arrOfToUserTransactions.push(transaction);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  makeTransactionsTo(transactionTo, allProfiles);\r\n  makeTransactionsFrom(transactionFrom, allProfiles);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 pt-5\">\r\n              <h2 className=\"pb-4\">My transactions </h2>\r\n              <h3>Your balance is {amount} $</h3>\r\n            </div>\r\n            <div className=\"col-lg-6 pt-5\">\r\n              <h2 className=\"pb-5\">Transactions history</h2>\r\n              <CustomTable transactions={arrOfUserTransactions} />\r\n\r\n              <CustomTable transactions={arrOfToUserTransactions} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allProfiles: state.users.allProfiles.profiles,\r\n  allTransactions: state.transactions.allUsersTransactions,\r\n  currentUserId: state.users.currentUser.id,\r\n  isLoading: state.transactions.isLoading,\r\n  amount: state.transactions.amount,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllTransactions: transactionsOperations.getAllTransaction,\r\n};\r\n\r\nUserTransactions.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n  getAllTransactions: PropTypes.func.isRequired,\r\n  allTransactions: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n  currentUserId: PropTypes.string.isRequired,\r\n  isLoading: PropTypes.bool,\r\n  allProfiles: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTransactions);\r\n","import axios from \"axios\";\r\nimport transactionsActions from \"./transactions-actions\";\r\n\r\naxios.defaults.baseURL = \"https://lassognchwmnevcbvdwb.supabase.co\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  apikey: API_KEY,\r\n};\r\n\r\nconst getAllTransaction = () => async (dispatch) => {\r\n  dispatch(transactionsActions.getAllTransactionRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/rest/v1/transaction?select=*\", {\r\n      headers,\r\n    });\r\n\r\n    dispatch(transactionsActions.getAllTransactionSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(transactionsActions.getAllTransactionError(error));\r\n  }\r\n};\r\n\r\nconst makeTransaction = (params) => async (dispatch) => {\r\n  dispatch(transactionsActions.makeTransactionRequest());\r\n\r\n  try {\r\n    await axios.post(\r\n      \"https://lassognchwmnevcbvdwb.supabase.co/rest/v1/transaction\",\r\n      params,\r\n      {\r\n        headers: { ...headers, Prefer: \"return=representation\" },\r\n      }\r\n    );\r\n\r\n    dispatch(transactionsActions.makeTransactionSuccess());\r\n  } catch (error) {\r\n    dispatch(transactionsActions.makeTransactionError(error));\r\n  }\r\n};\r\n\r\nexport default { makeTransaction, getAllTransaction };\r\n"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","transactions","map","item","index","from","to","amount","date","mapDispatchToProps","getAllTransactions","transactionsOperations","connect","state","allProfiles","users","profiles","allTransactions","allUsersTransactions","currentUserId","currentUser","id","isLoading","dispatch","useDispatch","useEffect","transactionsActions","reduce","total","countBalance","allUserTransactions","filter","allTransactionsToUser","transactionTo","created_at","transactionFrom","arrOfUserTransactions","arrOfToUserTransactions","i","length","j","user","transaction","firstName","lastName","slice","push","makeTransactionsTo","makeTransactionsFrom","Loader","axios","headers","apikey","process","makeTransaction","params","Prefer","getAllTransaction","response","data"],"sourceRoot":""}